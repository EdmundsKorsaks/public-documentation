{
  "openapi": "3.0.1",
  "info": {
    "title": "externalapi_v1",
    "description": "",
    "version": "1.0"
  },
  "paths": {
    "/app/usermanagement/categories": {
      "get": {
        "tags": [
          "CategoriesExternal"
        ],
        "summary": "Returns a list of Categories",
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "description": "Show only active records - true, show all records - false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations": {
      "post": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Send data to a location",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Location object to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationApiResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Get data from all locations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationForApiIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationForApiIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationForApiIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/{locationId}": {
      "patch": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Updates the specified location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Location object to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Deletes a location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to remove",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Return data from a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationForApiApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationForApiApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationForApiApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/available": {
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Return data form available location",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationShortGeneralIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationShortGeneralIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationShortGeneralIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/current": {
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Return info about the current position",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGeneralIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGeneralIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGeneralIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/primary": {
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Return info from fixed position",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGeneralApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGeneralApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGeneralApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/batch": {
      "post": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Create info about multiple locations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Array of location objects to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCreateManyItemsResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCreateManyItemsResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCreateManyItemsResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/metadata": {
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Retrieves metadata from all locations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidStringStringDictionaryDictionaryApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidStringStringDictionaryDictionaryApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidStringStringDictionaryDictionaryApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/{locationId}/metadata": {
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Retrieves metadata from a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to get metadata",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringDictionaryApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringDictionaryApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringDictionaryApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Create location specified metadata",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Metadata object to add",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationMetaData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationMetaData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationMetaData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationMetaData"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/currentLocation/metadata": {
      "patch": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Update metadata on current location",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Location metadata update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationMetaData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationMetaData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationMetaData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationMetaData"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/{locationId}/metadata/remove": {
      "patch": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Remove metadata from a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to remove metadata",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Object with list of metadata to remove",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RemovedLocationMetaData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemovedLocationMetaData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemovedLocationMetaData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemovedLocationMetaData"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/locations/{locationId}/route": {
      "get": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Return the route to a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to get route",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Create a route to a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Route of location to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationRoute"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationRoute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationRoute"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationRoute"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LocationsExternal"
        ],
        "summary": "Delete route for a specific location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to delete route",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/organisations/{organisationId}": {
      "get": {
        "tags": [
          "OrganisationsExternal"
        ],
        "summary": "Retrieve an organisation",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/organisations": {
      "get": {
        "tags": [
          "OrganisationsExternal"
        ],
        "summary": "Retrieve a list of all organisations",
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "description": "Show only active records - true, show all records - false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/persons": {
      "get": {
        "tags": [
          "PersonsExternal"
        ],
        "summary": "Retrieves a list of all persons",
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "description": "Show only active records - true, show all records - false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonIEnumerableApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PersonsExternal"
        ],
        "summary": "Create a new person",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Person object to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePerson"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePerson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePerson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePerson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/persons/{personId}": {
      "get": {
        "tags": [
          "PersonsExternal"
        ],
        "summary": "Retrieves info from a specific person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PersonsExternal"
        ],
        "summary": "Update info about a specific person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Person object to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePerson"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePerson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePerson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePerson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PersonsExternal"
        ],
        "summary": "Delete a specific person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/persons/{personId}/position": {
      "patch": {
        "tags": [
          "PersonsExternal"
        ],
        "summary": "Update position for a specific person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person to set position",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Person position object",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPosition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPosition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPosition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPosition"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/positions": {
      "get": {
        "tags": [
          "PositionsExternal"
        ],
        "summary": "Retrieves a list of all positions",
        "parameters": [
          {
            "name": "allLocations",
            "in": "query",
            "description": "Show only active records - true, show all records - false",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGeneralIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGeneralIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGeneralIEnumerableApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PositionsExternal"
        ],
        "summary": "Create a list of all positions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Position object to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/positions/locations/{locationId}": {
      "get": {
        "tags": [
          "PositionsExternal"
        ],
        "summary": "Retrieves positions",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/positions/{positionId}": {
      "patch": {
        "tags": [
          "PositionsExternal"
        ],
        "summary": "Updates position",
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "description": "ID of position to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Position object to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Position"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PositionsExternal"
        ],
        "summary": "Delete a position",
        "parameters": [
          {
            "name": "positionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMessage"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/positions/batch": {
      "post": {
        "tags": [
          "PositionsExternal"
        ],
        "summary": "Create a list of multiple positions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Array of positions to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionCreateManyItemsResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionCreateManyItemsResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionCreateManyItemsResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/usermanagement/positionTeams": {
      "get": {
        "tags": [
          "PositionTeamsExternal"
        ],
        "summary": "Retrieves a list of Position Teams",
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "description": "Show only active records - true, show all records - false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionTeamIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionTeamIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionTeamIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AliasName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssociatedAccount": {
        "type": "object",
        "properties": {
          "oAuthProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLocationMetaData": {
        "type": "object",
        "properties": {
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePerson": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "defaultPassword": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "format": "uuid"
          },
          "positionAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionAssignmentItem"
            },
            "nullable": true
          },
          "aliasNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AliasName"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuidStringStringDictionaryDictionaryApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "licencePlate": {
            "type": "string",
            "nullable": true
          },
          "imoNumber": {
            "type": "string",
            "nullable": true
          },
          "mmsiNumber": {
            "type": "string",
            "nullable": true
          },
          "globalId": {
            "type": "string",
            "nullable": true
          },
          "routeId": {
            "type": "string",
            "nullable": true
          },
          "locationPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPosition"
            },
            "nullable": true
          },
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationMetadata"
            },
            "nullable": true
          },
          "primary": {
            "type": "boolean"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "isVirtual": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LocationApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "additionalProperties": false
      },
      "LocationCreateManyItemsError": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Location"
          },
          "errorType": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationCreateManyItemsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationCreateManyItemsError"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LocationCreateManyItemsResponseApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LocationCreateManyItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "LocationForApi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "licencePlate": {
            "type": "string",
            "nullable": true
          },
          "imoNumber": {
            "type": "string",
            "nullable": true
          },
          "mmsiNumber": {
            "type": "string",
            "nullable": true
          },
          "globalId": {
            "type": "string",
            "nullable": true
          },
          "routeId": {
            "type": "string",
            "nullable": true
          },
          "locationPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPosition"
            },
            "nullable": true
          },
          "primary": {
            "type": "boolean"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationForApiApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LocationForApi"
          }
        },
        "additionalProperties": false
      },
      "LocationForApiIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationForApi"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationGeneral": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "licencePlate": {
            "type": "string",
            "nullable": true
          },
          "imoNumber": {
            "type": "string",
            "nullable": true
          },
          "mmsiNumber": {
            "type": "string",
            "nullable": true
          },
          "globalId": {
            "type": "string",
            "nullable": true
          },
          "routeId": {
            "type": "string",
            "nullable": true
          },
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationMetadata"
            },
            "nullable": true
          },
          "primary": {
            "type": "boolean"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "isVirtual": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LocationGeneralApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LocationGeneral"
          }
        },
        "additionalProperties": false
      },
      "LocationGeneralIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationGeneral"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/MetaDataType"
          },
          "dropdownTypeOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationPosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          }
        },
        "additionalProperties": false
      },
      "LocationRoute": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationShortGeneral": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "primary": {
            "type": "boolean"
          },
          "isVirtual": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LocationShortGeneralIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationShortGeneral"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<br/>Office = 0<br/> Vessel = 1<br/> Truck = 2",
        "format": "int32"
      },
      "MetaDataType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "<br/>Defined = 0<br/> Text = 1<br/> Number = 2<br/> Dropdown = 3<br/> Date = 4<br/> DateAndTime = 5",
        "format": "int32"
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Organisation"
          }
        },
        "additionalProperties": false
      },
      "OrganisationIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "aliasNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AliasName"
            },
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "format": "uuid"
          },
          "positionAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionAssignment"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "lastActivity": {
            "$ref": "#/components/schemas/PersonLastActivity"
          },
          "profileImageUrl": {
            "type": "string",
            "nullable": true
          },
          "associatedAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedAccount"
            },
            "nullable": true
          },
          "passwordUpdateTime": {
            "type": "string",
            "format": "date-time"
          },
          "defaultPassword": {
            "type": "string",
            "nullable": true
          },
          "resetPassword": {
            "$ref": "#/components/schemas/ResetPassword"
          }
        },
        "additionalProperties": false
      },
      "PersonApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "additionalProperties": false
      },
      "PersonIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonLastActivity": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string",
            "format": "uuid"
          },
          "location": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasActiveSessions": {
            "type": "boolean"
          },
          "timeDiff": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPosition": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Position": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "permissionGroup": {
            "type": "string",
            "format": "uuid"
          },
          "permissionGroupWhenActivelyAssigned": {
            "type": "string",
            "format": "uuid"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "shouldAlwaysBeAssigned": {
            "type": "boolean"
          },
          "allowMultipleActiveAssigns": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PositionApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Position"
          }
        },
        "additionalProperties": false
      },
      "PositionAssignment": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          },
          "activelyAssigned": {
            "type": "boolean"
          },
          "assignedSince": {
            "type": "string",
            "format": "date-time"
          },
          "activelyAssignedSince": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "handedOverBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "handedOverByName": {
            "type": "string",
            "nullable": true
          },
          "switchedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "switchedByName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionAssignmentItem": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "format": "uuid"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PositionCreateManyItemsError": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Position"
          },
          "errorType": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionCreateManyItemsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionCreateManyItemsError"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PositionCreateManyItemsResponseApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PositionCreateManyItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "PositionGeneral": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionGeneralIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionGeneral"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "timeString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PositionTeamIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionTeam"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemovedLocationMetaData": {
        "type": "object",
        "properties": {
          "metaDataNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "resetLink": {
            "type": "string",
            "nullable": true
          },
          "initiatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "validFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastResetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastResetInitiatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "State": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<br/>Active = 0<br/> Deactivated = 1<br/> Removed = 2",
        "format": "int32"
      },
      "StringApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringStringDictionaryApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLocationMetaData": {
        "type": "object",
        "properties": {
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePerson": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "defaultPassword": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "format": "uuid"
          },
          "positionAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionAssignmentItem"
            },
            "nullable": true
          },
          "aliasNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AliasName"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Auth Token": {
        "type": "apiKey",
        "description": "Auth Token",
        "name": "SessionToken",
        "in": "cookie"
      },
      "Bearer": {
        "type": "apiKey",
        "description": "Auth Token",
        "name": "Authorization",
        "in": "header"
      },
      "Tenant": {
        "type": "apiKey",
        "description": "Name of tenant",
        "name": "Tenant",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [],
      "Tenant": []
    }
  ]
}